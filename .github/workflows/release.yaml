name: "release"
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-holochain-[0-9]+.[0-9]+.[0-9]+'

jobs:
  publish-happ:
    permissions:
      contents: write
    runs-on: ubuntu-20.04
    outputs:
      releaseId: ${{ steps.create-release.outputs.id }}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # Checks out a copy of your repository on the ubuntu-latest machine
      - uses: actions/checkout@v2

      - name: Install nix
        uses: cachix/install-nix-action@v18
        with:
          install_url: https://releases.nixos.org/nix/nix-2.12.0/install
          extra_nix_config: |
            experimental-features = flakes nix-command

      - uses: cachix/cachix-action@v10
        with:
          name: holochain-ci

      - name: Install and test
        run: |
          nix develop --command bash -c "npm i && npm run build:happ"

      - id: create-release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "workdir/we.happ"
          body: "See assets below to download and install this version."
          prerelease: true
          draft: false

  publish-tauri:
    needs: publish-happ
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-2019, macos-11, ubuntu-20.04]
    env:
      MACOSX_DEPLOYMENT_TARGET: 10.13

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Support longpaths
        if: matrix.platform == 'windows-2019'
        run: git config --system core.longpaths true

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # Checks out a copy of your repository on the ubuntu-latest machine
      - uses: actions/checkout@v2

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libcanberra-gtk-module libcanberra-gtk3-module build-essential curl wget libssl-dev libgtk-3-dev squashfs-tools libgtksourceview-3.0-dev libappindicator3-dev patchelf librsvg2-dev ayatana-indicator-application

      - name: Extend space
        if: matrix.platform == 'ubuntu-20.04'
        uses: ./.github/actions/extend-space

      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          override: true
          toolchain: stable

      - name: Install and prepare
        run: |
          rustup target add wasm32-unknown-unknown
          curl -L --output workdir/we.happ https://github.com/lightningrodlabs/we/releases/download/${{ github.ref_name }}/we.happ
          npm install
          npm run build:zomes

      - name: build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ needs.publish-happ.outputs.releaseId }}


