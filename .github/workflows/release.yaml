name: "release"
on:
  push:
    branches:
      - release
    # tags:
    #   - 'v[0-9]+.[0-9]+.[0-9]+'
    #   - 'v[0-9]+.[0-9]+.[0-9]+-holochain-[0-9]+.[0-9]+.[0-9]+'

jobs:
  publish-tauri:
    strategy:
      fail-fast: false
      matrix:
        # platform: [macos-11]
        platform: [windows-2019, macos-11, ubuntu-20.04]
    env:
      MACOSX_DEPLOYMENT_TARGET: 10.13

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Support longpaths
        if: matrix.platform == 'windows-2019'
        run: git config --system core.longpaths true

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # Checks out a copy of your repository on the ubuntu-latest machine
      - uses: actions/checkout@v3

      - name: npm install and prepare
        run: |
          npm install
          curl -L --output workdir/we.happ https://drive.switch.ch/index.php/s/l1dFNGHxvk4KCpk/download

      - name: Build zomes
        run: |
          rustup target add wasm32-unknown-unknown
          npm run build:zomes

      - name: Build @lightningrodlabs/we-applet
        run: npm run build -w @lightningrodlabs/we-applet

      - name: Build applet-iframe
        run: npm run build -w applet-iframe

      - name: Build grapes-editor
        # if: matrix.platform == 'ubuntu-20.04' || matrix.platform == 'windows-2019'
        run: |
          npm run build -w grapes-editor
          echo "Building grapes-editor succeeded."

      # - name: Pull grapes-editor dist
      #   if: matrix.platform == 'macos-11'
      #   run: curl -L --output dist.zip https://drive.switch.ch/index.php/s/AjzF0eOv0rvP4rw/download && unzip dist.zip -d ./ui/libs/grapesjs

      - name: Build @lightningrodlabs/attachments
        run: npm run build -w @lightningrodlabs/attachments

      - name: Build main UI
        run: npm run build -w we-alpha

      - name: setup binaries (Windows only)
        if: matrix.platform == 'windows-2019'
        run: |

          mkdir src-tauri/bins

          cargo install --version 0.3.0 lair_keystore
          $LkPath = Get-Command lair-keystore | Select-Object -ExpandProperty Definition
          Copy-Item $LkPath -Destination src-tauri/bins/lair-keystore-v0.3.0-x86_64-pc-windows-msvc.exe


          cargo install holochain --version 0.2.3-beta-rc.1 --locked --features sqlite-encrypted
          $HcPath = Get-Command holochain | Select-Object -ExpandProperty Definition
          Copy-Item $HcPath -Destination src-tauri/bins/holochain-v0.2.3-beta-rc.1-x86_64-pc-windows-msvc.exe


      - name: setup binaries (macos only)
        if: matrix.platform == 'macos-11'
        run: |
          mkdir src-tauri/bins

          cargo install --version 0.3.0 lair_keystore
          LAIR_PATH=$(which lair-keystore)
          cp $LAIR_PATH src-tauri/bins/lair-keystore-v0.3.0-x86_64-apple-darwin

          cargo install holochain --version 0.2.3-beta-rc.1 --locked --features sqlite-encrypted
          HOLOCHAIN_PATH=$(which holochain)
          cp $HOLOCHAIN_PATH src-tauri/bins/holochain-v0.2.3-beta-rc.1-x86_64-apple-darwin

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libcanberra-gtk-module libcanberra-gtk3-module build-essential curl wget libssl-dev libgtk-3-dev squashfs-tools libgtksourceview-3.0-dev libappindicator3-dev patchelf librsvg2-dev ayatana-indicator-application

      - name: setup binaries (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          mkdir src-tauri/bins

          cargo install --version 0.3.0 lair_keystore
          LAIR_PATH=$(which lair-keystore)
          cp $LAIR_PATH src-tauri/bins/lair-keystore-v0.3.0-x86_64-unknown-linux-gnu

          cargo install holochain --version 0.2.3-beta-rc.1 --locked --features sqlite-encrypted
          HOLOCHAIN_PATH=$(which holochain)
          cp $HOLOCHAIN_PATH src-tauri/bins/holochain-v0.2.3-beta-rc.1-x86_64-unknown-linux-gnu


      - name: Extend space
        if: matrix.platform == 'ubuntu-20.04'
        uses: ./.github/actions/extend-space

      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          override: true
          toolchain: stable

      - name: build the app
        uses: tauri-apps/tauri-action@dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: We alpha v__VERSION__-holochain 0.2.3-beta-rc.1 # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: "We alpha v__VERSION__-holochain 0.2.3-beta-rc.1"
          releaseDraft: true
          prerelease: true
          args: --verbose



