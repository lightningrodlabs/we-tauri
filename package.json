{
  "name": "nh-launcher",
  "private": true,
  "workspaces": [
    "ui/app",
    "ui/libs/*"
  ],
  "scripts": {
    "check-env": "test ! -f .env && cp .env.example .env",
    "start": "npm run check-env; dotenv -- npm run network",
    "dev": "npm run check-env; dotenv -- npm run network:dev",
    "dev2": "npm run check-env; dotenv -- npm run network:dev2",
    "network": "hc s clean && npm run build:happ && npm run build -w @neighbourhoods/nh-launcher-applet && npm run build -w nh-launcher && concurrently \"npm run launch:happ\" \"npm run build:watch -w ui/app\"",
    "network:dev": "hc s clean && npm run build:happ && npm run build -w @neighbourhoods/nh-launcher-applet && dotenv -- concurrently \"open-cli http://localhost:${UI_PORT} && cd ui/app && npm run dev\" \"dotenv -- npm run start:dev\"",
    "network:dev2": "hc s clean && npm run build:happ && npm run build -w @neighbourhoods/nh-launcher-applet && dotenv -- concurrently \"open-cli http://localhost:${UI_PORT} && open-cli http://localhost:${UI_PORT_2} && cd ui/app && npm run dev2\" \"dotenv -- npm run start:dev2\"",
    "launch:happ": "RUST_LOG=warn WASM_LOG=debug echo \"pass\" | hc launch --piped -n $AGENTS ./workdir/we.happ --ui-path ./ui/app/dist network mdns",
    "launch:dev": "RUST_LOG=warn WASM_LOG=debug echo \"pass\" | hc launch --piped -n $AGENTS ./workdir/we.happ --ui-port $UI_PORT network mdns",
    "start:dev": "RUST_LOG=warn WASM_LOG=debug echo \"pass\" | hc s --piped -f=$VITE_ADMIN_PORT generate ./workdir/we.happ --run $VITE_HC_PORT -a we network mdns",
    "start:dev2": "RUST_LOG=warn WASM_LOG=debug echo \"pass\" | hc s --piped -f=$VITE_ADMIN_PORT,$VITE_ADMIN_PORT_2 generate ./workdir/we.happ -n 2 --run=$VITE_HC_PORT,$VITE_HC_PORT_2 -a we network mdns",
    "package": "npm run build:happ && npm run build -w @neighbourhoods/nh-launcher-applet && hc web-app pack workdir",
    "build:happ": "npm run build:dnas && hc app pack ./workdir",
    "build:dnas": "npm run build:zomes && hc dna pack ./dnas/we/workdir && hc dna pack ./dnas/lobby/workdir",
    "build:zomes": "CARGO_TARGET_DIR=target cargo build --release --target wasm32-unknown-unknown",
    "build:nh-launcher-applet": "cd ui/libs/nh-launcher-applet && npm run build",
    "playground": "run-singleton \"holochain-playground\"",
    "download-sensemaker": "rimraf dnas/sensemaker.dna && curl -L --output dnas/sensemaker.dna https://github.com/neighbour-hoods/sensemaker-lite/releases/download/v0.0.11-alpha/sensemaker.dna",
    "postinstall": "npm run download-sensemaker",
    "test:ui": "cd ui/app && npm test",
    "prepare": "husky install"
  },
  "devDependencies": {
    "@holochain-playground/cli": "^0.0.11",
    "concurrently": "^6.2.1",
    "concurrently-repeat": "^0.0.1",
    "cross-env": "^7.0.3",
    "dotenv-cli": "^7.2.1",
    "extract-zip-relative-path": "^2.0.4",
    "husky": "^8.0.0",
    "json-parse-better-errors": "^1.0.2",
    "new-port-cli": "^1.0.0",
    "open-cli": "^7.2.0",
    "rimraf": "^3.0.2",
    "run-singleton-cli": "^0.0.7"
  }
}
