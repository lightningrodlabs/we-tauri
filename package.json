{
  "name": "nh-launcher",
  "private": true,
  "scripts": {
    "test": "npm run test:laucher; npm run test:client",
    "test:launcher": "npm test -w nh-launcher",
    "test:client": "npm test -w @neighbourhoods/client",

    "start": "npm run launch:happ",
    "dev": "npm run browser:dev",
    "dev2": "npm run browser:dev2",

    "launch:happ": "npm run start:precheck; dotenv -- concurrently npm:start:happ npm:build:nh-watch",
    "browser:dev": "npm run start:precheck; dotenv -- concurrently npm:start:holochain-single npm:start:nh npm:start:browser-single",
    "browser:dev2": "npm run start:precheck; dotenv -- concurrently npm:start:holochain-double npm:start:nh2 npm:start:browser-double",

    "start:local-services": "hc run-local-services --bootstrap-address-path .bootstrap-path --signal-address-path .signal-path & echo $! > .local-services-pid && sleep 5",
    "start:check-local-services": "test ! -f .local-services-pid && npm run start:local-services",
    "start:precheck": "npm run build; npm run start:check-local-services; npm run clean:sandbox",
    "start:happ": "RUST_LOG=warn WASM_LOG=debug echo \"pass\" | hc launch --piped -n $AGENTS ./workdir/we.happ --ui-path ./ui/app/dist network  --bootstrap `cat .bootstrap-path` webrtc `cat .signal-path`",
    "start:nh": "npm run dev -w nh-launcher",
    "start:nh2": "npm run dev2 -w nh-launcher",
    "start:browser-single": "sleep 20 && open-cli http://localhost:${UI_PORT}",
    "start:browser-double": "sleep 20 && open-cli http://localhost:${UI_PORT} && open-cli http://localhost:${UI_PORT_2}",
    "start:holochain-single": "RUST_LOG=warn WASM_LOG=debug echo \"pass\" | hc s --piped -f=$VITE_ADMIN_PORT generate ./workdir/we.happ --run $VITE_HC_PORT -a we network  --bootstrap `cat .bootstrap-path` webrtc `cat .signal-path`",
    "start:holochain-double": "RUST_LOG=warn WASM_LOG=debug echo \"pass\" | hc s --piped -f=$VITE_ADMIN_PORT,$VITE_ADMIN_PORT_2 generate ./workdir/we.happ -n $AGENTS --run=$VITE_HC_PORT,$VITE_HC_PORT_2 -a we network --bootstrap `cat .bootstrap-path` webrtc `cat .signal-path`",

    "stop:local-services": "kill `cat .local-services-pid`; rm .local-services-pid; rm .bootstrap-path; rm .signal-path",

    "build": "pnpm run build:happ && pnpm run build:es-libs && pnpm run build:nh-launcher && hc web-app pack workdir",
    "build:happ": "pnpm run build:dnas && hc app pack ./workdir",
    "build:dnas": "pnpm run build:zomes && hc dna pack ./dnas/we/workdir && hc dna pack ./dnas/lobby/workdir && hc dna pack ./dnas/sensemaker/workdir && hc dna pack ./dnas/test_provider/workdir",
    "build:zomes": "CARGO_TARGET_DIR=target cargo build --release --target wasm32-unknown-unknown",
    "build:es-libs": "pnpm run build:design-system-components && pnpm run build:client && pnpm run build:membrane-invitations",
    "build:design-system-components": "pnpm run --dir ui/libs/design-system-components build",
    "build:client": "pnpm run --dir ui/libs/sensemaker-client build",
    "build:membrane-invitations": "pnpm run --dir ui/libs/membrane-invitations build",
    "build:nh-launcher": "pnpm run --dir ui/app build",
    "build:nh-watch": "pnpm run --dir ui/app build:watch",

    "clean": "pnpm run clean:sandbox; pnpm run clean:build && pnpm run clean:modules",
    "clean:happ": "rm workdir/we.happ; rm workdir/we.webhapp",
    "clean:dnas": "rimraf dnas/**/workdir/*.dna",
    "clean:build": "rimraf target; pnpm run clean:dnas; pnpm run clean:happ; rimraf ui/app/dist; exit 0",
    "clean:modules": "rimraf **/node_modules",
    "clean:sandbox": "hc sandbox clean",

    "playground": "run-singleton \"holochain-playground\"",
    "check-env": "test ! -f .env && cp .env.example .env; exit 0",
    "postinstall": "pnpm run check-env",
    "prepare": "husky install"
  },
  "devDependencies": {
    "@holochain-playground/cli": "^0.0.11",
    "concurrently": "^6.5.1",
    "concurrently-repeat": "^0.0.1",
    "cross-env": "^7.0.3",
    "dotenv-cli": "^7.3.0",
    "extract-zip-relative-path": "^2.0.4",
    "husky": "^8.0.3",
    "json-parse-better-errors": "^1.0.2",
    "new-port-cli": "^1.0.0",
    "open-cli": "^7.2.0",
    "rimraf": "^3.0.2",
    "run-singleton-cli": "^0.0.7"
  }
}
