{
  "name": "nh-launcher",
  "private": true,
  "scripts": {
    "test": "pnpm test:laucher; pnpm test:client",
    "test:launcher": "pnpm test --dir ui/app/",
    "test:client": "pnpm test --dir ui/libs/sensemaker-client",

    "start": "pnpm launch:happ",
    "dev": "pnpm browser:dev",
    "dev2": "pnpm browser:dev2",

    "launch:happ": "pnpm start:precheck; dotenv -- concurrently npm:start:happ npm:build:nh-watch",
    "browser:dev": "pnpm start:precheck; dotenv -- concurrently npm:start:holochain-single npm:start:nh npm:start:browser-single",
    "browser:dev2": "pnpm start:precheck; dotenv -- concurrently npm:start:holochain-double npm:start:nh2 npm:start:browser-double",

    "start:local-services": "hc run-local-services --bootstrap-address-path .bootstrap-path --signal-address-path .signal-path & echo $! > .local-services-pid && sleep 5",
    "start:check-local-services": "test ! -f .local-services-pid && pnpm start:local-services",
    "start:precheck": "pnpm build; pnpm start:check-local-services; pnpm clean:sandbox",
    "start:happ": "RUST_LOG=warn WASM_LOG=debug echo \"pass\" | hc launch --piped -n $AGENTS ./workdir/we.happ --ui-path ./ui/app/dist network  --bootstrap `cat .bootstrap-path` webrtc `cat .signal-path`",
    "start:nh": "pnpm run --dir ui/app/ dev",
    "start:nh2": "pnpm run --dir ui/app/ dev2",
    "start:browser-single": "sleep 20 && open-cli http://localhost:${UI_PORT}",
    "start:browser-double": "sleep 20 && open-cli http://localhost:${UI_PORT} && open-cli http://localhost:${UI_PORT_2}",
    "start:holochain-single": "RUST_LOG=warn WASM_LOG=debug echo \"pass\" | hc s --piped -f=$VITE_ADMIN_PORT generate ./workdir/we.happ --run $VITE_HC_PORT -a we network  --bootstrap `cat .bootstrap-path` webrtc `cat .signal-path`",
    "start:holochain-double": "RUST_LOG=warn WASM_LOG=debug echo \"pass\" | hc s --piped -f=$VITE_ADMIN_PORT,$VITE_ADMIN_PORT_2 generate ./workdir/we.happ -n $AGENTS --run=$VITE_HC_PORT,$VITE_HC_PORT_2 -a we network --bootstrap `cat .bootstrap-path` webrtc `cat .signal-path`",

    "stop:local-services": "kill `cat .local-services-pid`; rm .local-services-pid; rm .bootstrap-path; rm .signal-path",

    "build": "pnpm build:happ && pnpm run -r --filter=!./applet-dev-workspace/** build && hc web-app pack workdir",
    "build:happ": "pnpm build:dnas && hc app pack ./workdir",
    "build:dnas": "pnpm build:zomes && hc dna pack ./dnas/we/workdir && hc dna pack ./dnas/lobby/workdir && hc dna pack ./dnas/sensemaker/workdir && hc dna pack ./dnas/test_provider/workdir",
    "build:zomes": "CARGO_TARGET_DIR=target cargo build --release --target wasm32-unknown-unknown",
    "build:nh-watch": "pnpm run --dir ui/app build:watch",

    "clean": "pnpm clean:sandbox; pnpm clean:build",
    "clean:happ": "rm workdir/we.happ; rm workdir/we.webhapp",
    "clean:dnas": "rimraf --glob dnas/**/workdir/*.dna",
    "clean:dist": "rimraf --glob **/dist",
    "clean:modules": "rimraf --glob **/node_modules",
    "clean:ui": "pnpm clean:dist; pnpm clean:modules",
    "clean:build": "rimraf target; pnpm clean:dnas; pnpm clean:happ; pnpm clean:ui; exit 0",
    "clean:sandbox": "hc sandbox clean",

    "playground": "run-singleton \"holochain-playground\"",
    "check-env": "test ! -f .env && cp .env.example .env; exit 0",
    "postinstall": "pnpm check-env",
    "prepare": "husky install",

    "storybook": "storybook dev -p 6006",
    "build-storybook": "storybook build",
    "test-storybook": "test-storybook"
  },
  "devDependencies": {
    "@holochain-playground/cli": "^0.0.11",
    "@babel/core": "^7.17.2",
    "@base2/pretty-print-object": "^1.0.2",
    "@lit-labs/scoped-registry-mixin": "^1.0.1",
    "@neighbourhoods/design-system-styles": "workspace:*",
    "@neighbourhoods/design-system-components": "workspace:*",
    "@scoped-elements/shoelace": "^0.1.0",
    "@storybook/addon-actions": "^7.4.0",
    "@storybook/addon-essentials": "^7.4.0",
    "@storybook/addon-interactions": "^7.4.0",
    "@storybook/addon-links": "^7.4.0",
    "@storybook/blocks": "^7.4.0",
    "@storybook/builder-vite": "^7.4.0",
    "@storybook/manager-api": "^7.6.1",
    "@storybook/jest": "^0.2.2",
    "@storybook/test-runner": "^0.13.0",
    "@storybook/testing-library": "^0.2.0",
    "@storybook/web-components": "^7.4.0",
    "@storybook/web-components-vite": "^7.4.0",
    "@webcomponents/scoped-custom-element-registry": "^0.0.9",
    "babel-loader": "^8.2.3",
    "concurrently": "^8.2.1",
    "concurrently-repeat": "^0.0.1",
    "cross-env": "^7.0.3",
    "dotenv-cli": "^7.3.0",
    "extract-zip-relative-path": "^2.0.4",
    "http-server": "^14.1.1",
    "husky": "^8.0.3",
    "jest": "^29.6.4",
    "json-parse-better-errors": "^1.0.2",
    "lit": "^3.0.0",
    "new-port-cli": "^1.0.0",
    "open-cli": "^7.2.0",
    "run-singleton-cli": "^0.0.7",
    "rimraf": "^5.0.1",
    "shadow-dom-testing-library": "^1.11.0",
    "storybook": "^7.4.0",
    "tslib": "^2.6.2",
    "typescript": "^5.2.2",
    "vite": "^4.4.9",
    "vite-tsconfig-paths": "^4.2.0",
    "wait-on": "^7.0.1"
  }
}
